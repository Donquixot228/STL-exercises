// Первая задача find() -Найти в стартовом составе команды игрока с номеров 28;
Если такого игрока в команле нету вывести - "The team doesn't have this player "
Если такой игрок есть в команде вывести - "The team have palyer with number 28 "



#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;


int main(){

  vector<int>team = { 1,22,3,44,5,56,23,28 };
	vector<int>::iterator it = find(team.begin(), team.end(), 28);
  
	if (it != team.end())
		cout << "We have this player";
	else
		cout << "We doesnt have this player";


}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Вторая задача find_if()- Найти и вывести первый не четный номер игрока в команде
int main() {
	vector<int>team = { 2,4};
	vector<int>::iterator it;
	it = find_if(team.begin(), team.end(), isodd);
	if (it != team.end())
		cout << "The first odd number is: " << *it;
	else
		cout << "not founded odd number";
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`
Третья задача find_first_of()-у нас есть последовательность букв {a,b,c}  и вторая последовательность {c,a,b}
Задача проверить проверить и вывести буквe которая первая совпадеть.
*#include <cctype>
*bool lol(char c1, char c2){
return (tolower (c1)== tolower (c2));
}

int main() {

	int mychar[] = { '*A','b','c' };

	vector<char>kaka(mychar, mychar + 3);
	vector<char>::iterator it;

	int my[] = { 'c','a','b' };

	it = find_first_of(kaka.begin(), kaka.end(), my, my + 3, *lol);
	if (it != kaka.end())
		cout << "First match is : " << *it << endl;
	else
		cout << "NO one match" << endl;

	return 0;
	//Для того чтобы а и А воспринимались как один знак нужно кое-что извенить, изменения обозначины * 
}
